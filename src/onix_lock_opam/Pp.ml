module Lock_file = Onix_core.Lock_file
module Lock_pkg = Onix_core.Lock_pkg
module Opam_utils = Onix_core.Opam_utils

let ( or ) = Onix_core.Utils.( or )

let metadata =
  [
    ("opam-version", "2.0");
    ("synopsis", "This lock file was generated by onix " ^ Onix_core.Lib.version);
    ("maintainer", "The onix programmers");
    ("author", "The onix programmers");
    ("homepage", "https://github.com/odis-labs/onix");
    ("bug-reports", "https://github.com/odis-labs/onix/issues");
  ]

let pp_metadata f fields =
  Fmt.pf f "%a" (Fmt.list (fun f (k, v) -> Fmt.pf f "%s: %S" k v)) fields

let pp_synopsis f synopsis = Fmt.pf f "synopsis: %S" synopsis

let pp_depend f (pkg : Lock_pkg.t) =
  Fmt.pf f "%S {= %S}"
    (OpamPackage.name_to_string pkg.opam_details.package)
    (OpamPackage.version_to_string pkg.opam_details.package)

let pp_depends f depends =
  Fmt.pf f "@[<v2>depends: [@,%a@]@,]" (Fmt.list pp_depend) depends

let pp_pin_depend_src f (pkg : Lock_pkg.t) =
  match pkg.src with
  | Some (Git { url; rev }) -> Fmt.pf f "\"git+%s#%s\"" url rev
  | Some _ ->
    Fmt.invalid_arg
      "Lock dependency error for pinned package %a: url must be a Git URL"
      Opam_utils.pp_package pkg.opam_details.package
  | None ->
    Fmt.invalid_arg
      "Lock dependency error for pinned package %a: missing Git URL"
      Opam_utils.pp_package pkg.opam_details.package

let pp_pin_depend f (pkg : Lock_pkg.t) =
  Fmt.pf f "@[<v2>[@,%S@,%a@]@,]"
    (OpamPackage.to_string pkg.opam_details.package)
    pp_pin_depend_src pkg

let pp_pin_depends f pin_depends =
  Fmt.pf f "@[<v2>pin-depends: [@,%a@]@,]" (Fmt.list pp_pin_depend) pin_depends

let pp fmt (lock : Lock_file.t) =
  let pin_depends, depends =
    List.fold_left
      (fun (pins, deps) (pkg : Lock_pkg.t) ->
        match
          ( Opam_utils.is_pinned pkg.opam_details.package,
            Opam_utils.Opam_details.check_has_absolute_path pkg.opam_details )
        with
        | true, true -> (pkg :: pins, pkg :: deps)
        | false, true -> (pins, pkg :: deps)
        | _ -> (pins, deps))
      ([], []) lock.packages
  in
  let pin_depends, depends = (List.rev pin_depends, List.rev depends) in
  Fmt.pf fmt
    "@[<v># THIS IS AN AUTOGENERATED FILE. DO NOT EDIT DIRECTLY.@,\
     %a@,\
     %a@,\
     %a@]@."
    pp_metadata metadata pp_depends depends pp_pin_depends pin_depends
